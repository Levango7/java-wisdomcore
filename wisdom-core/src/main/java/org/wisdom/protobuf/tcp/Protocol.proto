syntax = "proto3";


package org.wisdom.protobuf.tcp;
option java_outer_classname = "ProtocolModel";
option optimize_for = SPEED;

message Message {
    enum Type {
        P2P = 0;
        PROTOCOL = 1;
    }
    Type type = 1;

    bool answered = 2;
    uint64 last_timestamp = 3;
    uint64 retry_times = 4;

    oneof data_msg {
        P2PMessage p2p_message = 5;
        ProtocolMessage protocol_message = 6;
    }
}

message TransactionsMessage {
    repeated Transaction transaction = 1;
}

message ProtocolMessage {
    enum Type {
        STATUS = 0;
        GET_BLOCKS = 1;
        BLOCKS = 2;
        COMMAND = 3;
        TRANSACTIONS = 4;
    }
    Type type = 1;

    oneof dataMsg {
        StatusMessage status_message = 2;
        GetBlocksMessage get_blocks_message = 3;
        BlocksMessage blocks_message = 4;
        Transaction command_message = 5;
        TransactionsMessage transactions_message = 6;
    }
}

message Block {
    uint32 version = 1;
    bytes hash_prev_block = 2;
    bytes hash_merkle_root = 3;
    bytes hash_merkle_state = 4;
    bytes hash_merkle_incubate = 5;
    uint32 height = 6;
    uint32 created_at = 7;
    bytes n_bits = 8;
    bytes nonce = 9;
    bytes block_notice = 10;
    repeated Transaction body = 11;
}

message Transaction {
    uint32 version = 1;
    bytes hash = 2;
    enum Type {
        COINBASE = 0; // coinbase 事务
        TRANSFER = 1; // WDC转账
        VOTE = 2; // 投票
        DEPOSIT = 3; // 存证
        TRANSFER_MULTISIG_MULTISIG = 4; // 转账 多签到多签
        TRANSFER_MULTISIG_NORMAL = 5; // 转账 多签到普通
        TRANSFER_NORMAL_MULTISIG = 6; // 转账 普通到多签
        ASSET_DEFINE = 7; // 资产定义
        ATOMIC_EXCHANGE = 8; // 原子交换
        INCUBATE = 9; // 申请孵化
        EXTRACT_INTEREST = 10; // 获取利息收益
        EXTRACT_SHARING_PROFIT = 11; // 获取分享收益
        EXTRACT_COST = 12; //提取本金
        EXIT_VOTE = 13;//撤回投票
        PLEDGE = 14;//抵押
        EXIT_PLEDGE = 15;//撤回抵押
    }
    Type type = 3;
    uint64 nonce = 4;
    bytes from = 5;
    uint64 gas_price = 6;
    uint64 amount = 7;
    bytes to = 8;
    bytes signature = 9;
    uint32 payloadlen = 10;
    bytes payload = 11;
}


message StatusMessage {
    uint32 version = 1;
    uint32 current_height = 2;
    bytes current_block_hash = 3;

    // big-endian unsigned big integer
    uint32 total_weight = 4;

    // genesis block hash
    bytes genesis_hash = 5;
}

// fetch canonical headers
message GetHeadersMessage {
    uint32 hash_count = 1; // number of block locator hash entries
    bytes block_locator_hash = 2;
    bytes hash_stop = 3;
}

message HeadersMessage {
    uint32 count = 1;
    repeated Block headers = 2;
}

// fetch canonical blocks
message GetBlocksMessage {
    uint32 start_height = 1;
    uint32 stop_height = 2;
    bool clip_from_stop = 3;
}

message BlocksMessage {
    uint32 count = 1;
    repeated Block blocks = 2;
}

message P2PMessage {
    enum Type {
        DISCONNECT = 0;
        PING = 1;
        PONG = 2;
    }
    Type type = 1;

    oneof data_msg {
        DisconnectMessage disconnect_message = 2;
        PingMessage ping_message = 3;
        PongMessage pong_message = 4;
    }
}

//hellomessage 暂时不添加

message DisconnectMessage {

    string reason_code = 1;
}

message PingMessage {
}

message PongMessage {
}

