{
   // windows脚本 .\gradlew runTransactionTestTool -PappArgs="-c F:\IDEAproject\java-wisdomcore\transaction-test-example.jsonc"
   // unix 脚本 ./gradlew runTransactionTestTool -PappArgs="-c ../transaction-test-example.jsonc"
  "host": "192.168.1.11", // 可以通过命令行 -h 参数 覆盖
  "port": "19585", // 可以通过命令行 -p 参数 覆盖
  "privateKey": "fa8802a0fc88b901c42b9518796346e34447d9503e40a30a4d26ccd6451c6c65", // 通过命令行 -k 参数覆盖 传递私钥
  "nonce": 0, // 起始 nonce 可选，如果为 0 自动获取，通过命令行 -n 参数 传递
  "protocol": "http", // 从 http 发事务是批量 http 请求，从 grpc 发是单次 http2 请求速度更快
  "grpc.port": "9585", // 接收者节点的 grpc 监听端口, 如果节点的p2p地址是 wisdom://192.168.1.118:9585， 就填 9585
  // transaction info
  "transactions": [
//    {
//      "amount": 100000, // 单位是 WDC，不可省略
//      "type": "MORTGAGE", // 可选， 默认是转账， 可以是以下值，不区分大小写
      /*
              TRANSFER, VOTE,
              DEPOSIT, TRANSFER_MULTISIG_MULTISIG, TRANSFER_MULTISIG_NORMAL,
              TRANSFER_NORMAL_MULTISIG, ASSET_DEFINE, ATOMIC_EXCHANGE,
              INCUBATE, EXTRACT_INTEREST, EXTRACT_SHARING_PROFIT,
              EXTRACT_COST, EXIT_VOTE, MORTGAGE, EXIT_MORTGAGE
      */
//      "payload": "", // 可选，
//      "to": "d47b6b712ac4b276ac2e4c44fa2dae3c107d0b45", // 接收者的 公钥，公钥哈希或者地址
//      "times": 1, // 发送次数
//    },


      {
        "amount":"10000",
        "type": "VOTE",
        "payload": "", // 孵化分享者  公钥，公钥哈希或者地址
        "to": "d47b6b712ac4b276ac2e4c44fa2dae3c107d0b45", // 孵化事务的 to 填自己
        "times": 1, // 发送次数,
      }

//    {
//      "amount": 100000, // 单位是 WDC，不可省略
//      "type": "MORTGAGE", // 可选， 默认是转账， 可以是以下值，不区分大小写
      /*
              TRANSFER 转账, VOTE 投票,
              DEPOSIT, TRANSFER_MULTISIG_MULTISIG, TRANSFER_MULTISIG_NORMAL,
              TRANSFER_NORMAL_MULTISIG, ASSET_DEFINE, ATOMIC_EXCHANGE,
              INCUBATE 孵化, EXTRACT_INTEREST 提取利息, EXTRACT_SHARING_PROFIT 分享收益,
              EXTRACT_COST 提取本金, EXIT_VOTE 撤回投票, MORTGAGE 抵押, EXIT_MORTGAGE 撤回抵押
      */
//      "payload": " ", // 可选，
//      "to": "d47b6b712ac4b276ac2e4c44fa2dae3c107d0b45", // 接收者的 公钥，公钥哈希或者地址
//      "times": 1, // 发送次数
//    },

//      {
//        "amount":"300",
//        "type": "INCUBATE",
//        "payload": "", // 投票事务的事物哈希
//        "to": "a8b02b4a49a18636afa61626c230a3bd9c3b457e65567ceeef42bf9ecc618e67", //  投票者  公钥，公钥哈希或者地址
//        "times": 1, // 发送次数,
//        "hatchType": 120 // 孵化天数
//      }
//      {
//              "amount":"300",
//              "type": "EXTRACT_COST",
//              "payload": "1308902d2db46c73d97b742c63685f4c21be2d2ae0d281fc29de1ea893921e59", // 投票事务的事物哈希
//              "to": "a8b02b4a49a18636afa61626c230a3bd9c3b457e65567ceeef42bf9ecc618e67", //  投票者  公钥，公钥哈希或者地址
//              "times": 1, // 发送次数,
//              "hatchType": 120 // 孵化天数
//      }
  ]
}

/*
存证事务的 payload 可以填文本了
如果文本内容是合法的十六进制字符串则会被解析为字节数组 例如 "payload": "ff", 提交的是一个字节
如果要强制提交文本用 `` 包含 例如 "payload": "`ff`", 提交的是两个字节，表示 f 这个字符的 utf8 编码
*/
